export declare class RDSMetrics {
    static cpuUtilizationAverage(dimensions: {
        DBInstanceIdentifier: string;
    }): {
        namespace: string;
        metricName: string;
        dimensions: {
            DBInstanceIdentifier: string;
        };
        statistic: string;
    };
    static readLatencyAverage(dimensions: {
        DBInstanceIdentifier: string;
    }): {
        namespace: string;
        metricName: string;
        dimensions: {
            DBInstanceIdentifier: string;
        };
        statistic: string;
    };
    static databaseConnectionsSum(dimensions: {
        DBInstanceIdentifier: string;
    }): {
        namespace: string;
        metricName: string;
        dimensions: {
            DBInstanceIdentifier: string;
        };
        statistic: string;
    };
    static freeStorageSpaceAverage(dimensions: {
        DBInstanceIdentifier: string;
    }): {
        namespace: string;
        metricName: string;
        dimensions: {
            DBInstanceIdentifier: string;
        };
        statistic: string;
    };
    static freeableMemoryAverage(dimensions: {
        DBInstanceIdentifier: string;
    }): {
        namespace: string;
        metricName: string;
        dimensions: {
            DBInstanceIdentifier: string;
        };
        statistic: string;
    };
    static readThroughputAverage(dimensions: {
        DBInstanceIdentifier: string;
    }): {
        namespace: string;
        metricName: string;
        dimensions: {
            DBInstanceIdentifier: string;
        };
        statistic: string;
    };
    static readIopsAverage(dimensions: {
        DBInstanceIdentifier: string;
    }): {
        namespace: string;
        metricName: string;
        dimensions: {
            DBInstanceIdentifier: string;
        };
        statistic: string;
    };
    static writeLatencyAverage(dimensions: {
        DBInstanceIdentifier: string;
    }): {
        namespace: string;
        metricName: string;
        dimensions: {
            DBInstanceIdentifier: string;
        };
        statistic: string;
    };
    static writeThroughputAverage(dimensions: {
        DBInstanceIdentifier: string;
    }): {
        namespace: string;
        metricName: string;
        dimensions: {
            DBInstanceIdentifier: string;
        };
        statistic: string;
    };
    static writeIopsAverage(dimensions: {
        DBInstanceIdentifier: string;
    }): {
        namespace: string;
        metricName: string;
        dimensions: {
            DBInstanceIdentifier: string;
        };
        statistic: string;
    };
}
